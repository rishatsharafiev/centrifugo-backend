version: "3.7"
networks:
  backend:
    driver: bridge

services:
  centrifugo:
    image: centrifugo/centrifugo:v2.6.1
    volumes:
      - ./centrifugo:/centrifugo
    command: centrifugo -c config.json
    ports:
      - 9010:8000
    networks:
      - backend
    ulimits:
        nofile:
          soft: "65536"
          hard: "65536"
    restart: unless-stopped
    depends_on:
      - redis

  redis:
    image: redis:6.0.6-alpine
    volumes:
      - ./redis/data/:/data
    command: redis-server --appendonly yes
    ports:
      - 6379
    restart: unless-stopped
    networks:
      - backend

  redis_exporter:
    image: oliver006/redis_exporter:v1.9.0-alpine
    command: -redis.addr redis://redis:6379
    ports:
      - 9121
    networks:
      - backend
    restart: unless-stopped
    depends_on:
      - redis

  node_exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9020:9100
    networks:
      - backend
    restart: unless-stopped

  cadvisor:
    image: google/cadvisor:v0.33.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 9030:8080
    networks:
      - backend
    restart: unless-stopped

  # alertmanager:
  #   image: prom/alertmanager:v0.21.0
  #   ports:
  #     - 9040:9093
  #   volumes:
  #     - ./alertmanager/:/etc/alertmanager/
  #   networks:
  #     - backend
  #   restart: unless-stopped
  #   command:
  #     - '--config.file=/etc/alertmanager/config.yml'
  #     - '--storage.path=/alertmanager'
  #   depends_on:
  #     - prometheus

  prometheus:
    user: root
    image: prom/prometheus:v2.20.1
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/data/:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    ports:
      - 9050:9090
    networks:
      - backend
    depends_on:
      - redis_exporter
      - centrifugo

  grafana:
    user: root
    image: grafana/grafana:7.1.3
    container_name: grafana
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    ports:
      - 9060:3000
    networks:
      - backend
    depends_on:
      - prometheus
